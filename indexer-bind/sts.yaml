apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: indexer-bind
    app.kubernetes.io/name: indexer-bind
  name: indexer-bind
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: indexer-bind
      app.kubernetes.io/name: indexer-bind
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: indexer-bind
        app.kubernetes.io/name: indexer-bind
    spec:
      containers:
        - image: registry.devops.rivtower.com/web5/indexer-bind:${INDEXER_BIND_VERSION}
          imagePullPolicy: Always
          env:
            # - name: LOG_LEVEL
            #   value: trace
            - name: PORT
              value: '${INDEXER_BIND_PORT}'
            - name: DB_URL
              value: postgres://postgres:postgres@localhost/indexer-bind
            - name: CKB_NODE
              value: https://testnet.ckb.dev
            - name: CKB_NETWORK
              value: ckb_testnet
            - name: START_HEIGHT
              value: '${START_HEIGHT}'
          name: indexer-bind
          command: ['address-bind-be']
          args:
            [
              '--db-url',
              '$(DB_URL)',
              '--network',
              '$(CKB_NETWORK)',
              '--ckb-url',
              '$(CKB_NODE)',
              'indexer',
              '--log-filter',
              'debug,hyper_util=info,sqlx=info',
              '--port',
              '$(PORT)',
              '-s',
              '$(START_HEIGHT)',
            ]
          ports:
            - containerPort: ${INDEXER_BIND_PORT}
              name: http
              protocol: TCP
          resources:
            limits:
              cpu: 4000m
              memory: 4096Mi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext: {}
        - image: m.daocloud.io/docker.io/postgres:17-bookworm
          imagePullPolicy: IfNotPresent
          name: database
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_DB
              value: indexer-bind
            - name: POSTGRES_INITDB_ARGS
              value: '--encoding=UTF-8 --lc-collate=C --lc-ctype=C'
          ports:
            - containerPort: 5432
              name: postgres
              protocol: TCP
          resources:
            limits:
              cpu: 4000m
              memory: 4096Mi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: database
  volumeClaimTemplates:
    - metadata:
        name: database
      spec:
        accessModes: ['ReadWriteOnce']
        storageClassName: local-path
        resources:
          requests:
            storage: 50Gi
